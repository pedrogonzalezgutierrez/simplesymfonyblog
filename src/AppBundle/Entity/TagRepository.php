<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * TagRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TagRepository extends EntityRepository {
	
	private function baseQuery() {
		return $this->createQueryBuilder('t');
	}
	
	private function baseCount($query) {
		return $query->select('count(t)');
	}		
	
	private function paginator($query, $firstResult, $maxResults) {
		// Both $firstResult and $maxResults were checked
		return $query
		->setMaxResults($maxResults)
		->setFirstResult($firstResult);
	}
	
	public function count() {
		return $this->baseCount($this->baseQuery())->getQuery()->getSingleScalarResult();
	}
	
	public function getMaxPages($maxResults) {
		return ceil($this->count()/$maxResults);
	}
	
	private function TagNameASC($query) {
		return $query->orderBy('t.tagName', 'ASC');
	}
	
	public function findAllByTagNameASC() {
		return $this->TagNameASC($this->baseQuery())->getQuery()->getResult();
	}
	
	public function findAllPaginatorByTagNameASC($firstResult, $maxResults) {
		
		$query=$this->TagNameASC($this->baseQuery());
		$query=$this->paginator($query, $firstResult, $maxResults);
	
		return $query->getQuery()->getResult();
	}
	
	
	public function findTagsNotIn($tags) {
	
		if( count($tags) == 0 ) {
			return $this->findAllByTagNameASC();
		}
		
		$query=$this->TagNameASC($this->baseQuery());
	
		// https://gist.github.com/PowerKiKi/9571aea8fa8d6160955f
		$nots=array();
		foreach($tags as $tag) {
			$nots[] = $tag->getId();
		}
	
		$query->where('t.id NOT IN (:articletags)')->setParameter('articletags', $nots);
	
		return $query->getQuery()->getResult();
	
	}
	
}