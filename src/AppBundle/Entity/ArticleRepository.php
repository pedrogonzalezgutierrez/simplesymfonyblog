<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends EntityRepository {
	
	private function baseQuery() {
		return $this->createQueryBuilder('a');
	}
	
	private function baseCount($query) {
		return $query->select('count(a)');
	}
	
	private function paginator($query, $firstResult, $maxResults) {
		// Both $firstResult and $maxResults were checked
		return $query
		->setMaxResults($maxResults)
		->setFirstResult($firstResult);
	}
	
	public function count() {
		return $this->baseCount($this->baseQuery())->getQuery()->getSingleScalarResult();
	}
	
	public function getMaxPages($maxResults) {
		return ceil($this->count()/$maxResults);
	}
	
	public function countArticlesPublished() {
		$query=$this->ArticlePublished($this->baseQuery(),true);
		return $query->select('count(a)')->getQuery()->getSingleScalarResult();
	}
	
	public function getMaxPagesArticlesPublished($maxResults) {
		return ceil($this->countArticlesPublished()/$maxResults);
	}
	
	private function ArticleCreationDateDESC($query) {
		return $query->orderBy('a.articleCreationDate', 'DESC');
	}
	
	private function ArticlePublished($query,$articlePublished) {
		return $query
		->andWhere('a.articlePublished = :articlePublished')
		->setParameter('articlePublished', $articlePublished );
	}
	
	private function ArticleTitle($query,$articleTitle) {
		return $query
		->andWhere('a.articleTitle LIKE :articleTitle')
		->setParameter('articleTitle', "%".$articleTitle."%" );
	}
	
	public function findAllByArticleCreationDateDESC() {
		return $this->ArticleCreationDateDESC($this->baseQuery())->getQuery()->getResult();
	}
	
	public function findAllPaginatorByArticleCreationDateDESC($firstResult, $maxResults) {
	
		$query=$this->ArticleCreationDateDESC($this->baseQuery());
		$query=$this->paginator($query, $firstResult, $maxResults);
	
		return $query->getQuery()->getResult();
	
	}
	
	public function findAllPaginatorByArticleCreationDateDESCAndArticlePublished($page, $maxResults, $articlePublished) {
	
		$query=$this->ArticleCreationDateDESC($this->baseQuery());
		$query=$this->ArticlePublished($query, $articlePublished);
		$query=$this->paginator($query, $page, $maxResults);
	
		return $query->getQuery()->getResult();
	}
	
	public function findAllByArticleCreationDateDESCAndArticlePublishedAndArticleTitle($articlePublished, $articleTitle) {
	
		$query=$this->ArticleCreationDateDESC($this->baseQuery());
		$query=$this->ArticlePublished($query, $articlePublished);
		$query=$this->ArticleTitle($query, $articleTitle);
	
		return $query->getQuery()->getResult();
	}
	
}